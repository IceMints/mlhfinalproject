#docker
error_log /var/log/nginx/error.log;

include /usr/share/nginx/modules/*.conf;

upstream socketio_nodes {
    ip_hash;
    server web:80;
}

server {
    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/blobber.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blobber.tech/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/blobber.tech/chain.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    server_name  blobber.tech;
    root         /usr/share/nginx/html;
    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }

    location / {
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header Host $host;
        proxy_pass http://socketio_nodes/;
        proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
	    # proxy_cache_bypass $http_upgrade;
        # proxy_set_header HTTPS on;
	    # proxy_buffering off;
	    # proxy_send_timeout 60;
	    # proxy_read_timeout 60;
	}

    location /chat {
        proxy_pass http://socketio_nodes/chat;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin *;
        # proxy_redirect https://$host/ http://$host/;
        # proxy_set_header HTTPS off;
    }

	location /socketio {
        # proxy_set_header HTTP on;
        proxy_pass http://socketio_nodes/socketio/;
        proxy_http_version 1.1;
        proxy_buffering off;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # proxy_redirect https://$host/ http://$host/;
    }

	location ~ ^/cadvisor(.*)$ {
        proxy_pass http://cadvisor:8080$1;
        proxy_redirect / /cadvisor/; 
        resolver 127.0.0.11; # 127.0.0.11 Docker embedded DNS server
    }

}
    # server {
    #     root         /usr/share/nginx/html;
        
    #     error_page 404 /404.html;
    #         location = /40x.html {
    #     }

    #     error_page 500 502 503 504 /50x.html;
    #         location = /50x.html {
    #     }
    # }
    # server {
    #     if ($host = example.com) {
    #         return 301 https://$server_name$request_uri;
    #     } 
    #     listen 80;
    #     return 404; 
    # }
#}

