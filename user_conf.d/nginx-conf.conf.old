#server {
#    listen 443 default_server reuseport;
#    ssl_reject_handshake on;
#}

server {
    listen 80;
    server_name blobber.tech www.blobber.tech;

#    return 301 https://$host$request_uri;

    location / {
        proxy_pass http://web:80;
    }





#server {
    # Listen to port 443 on both IPv4 and IPv6.
    #listen 443 ssl default_server reuseport;
    #listen [::]:443 ssl default_server reuseport;

    # Domain names this server should respond to.
    server_name blobber.tech www.blobber.tech;

    location ~ ^/cadvisor(.*)$ {
        proxy_pass http://cadvisor:8080$1;
        proxy_redirect / /cadvisor/; 
        resolver 127.0.0.11; # 127.0.0.11 Docker embedded DNS server
    }

#    location / {
#        proxy_pass http://web:80/;
 #       proxy_redirect off;

  #      proxy_set_header Host $host;
  #      proxy_set_header X-Real-IP $remote_addr;
  #      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 #   }
    

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/blobber.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blobber.tech/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/blobber.tech/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location /socket.io {
        proxy_pass http://127.0.0.1:5000/socket.io;
 #       proxy_http_version 1.1;
 #       proxy_buffering off;
 #       proxy_redirect off;

#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "Upgrade";

#        proxy_set_header Host $http_host;
#        proxy_set_header X-Forwarded-Host $http_host;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }

}
}
